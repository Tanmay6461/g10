/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.SystemAdministration;

import Business.Model.Canteen;
import Business.Model.Enterprise;
import Business.Model.EnterpriseDirectory;
import Business.Model.HealthClub;
import Business.Model.Lab;
import Business.Model.Network;
import Business.Model.Pharmacy;
import Business.Model.SystemAdmin;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tanmay Paawar
 */
public class manageEnterpriseJPanel extends javax.swing.JPanel {

        private SystemAdmin systemAdmin;
        private Runnable callOnCreateMethod;
    /**
     * Creates new form manageEnterpriseJPanel
     */
 public manageEnterpriseJPanel(SystemAdmin systemAdmin, Runnable callOnCreateMethod) {
        initComponents();
        this.systemAdmin = systemAdmin;
        this.callOnCreateMethod = callOnCreateMethod;
        for (Network network : systemAdmin.getListOfNetwork()) {      //populate items in network combobox
            cmbNetwork1.addItem(network.getName());
        }
        for (Network network : systemAdmin.getListOfNetwork()) {
            cmbNetwork.addItem(network.getName());
        }
       
        btnDelete.setOpaque(true);
        
        btnAdd.setOpaque(true);
       
        btnUpdate.setOpaque(true);
        
        btnBack.setOpaque(true);
        
        btnView.setOpaque(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblsysadmin = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnterprises = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        txtEnterpriseName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbNetwork1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbEntp = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtPhoneNo = new javax.swing.JTextField();
        cmbNetwork = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();

        lblsysadmin.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblsysadmin.setForeground(new java.awt.Color(255, 255, 255));
        lblsysadmin.setText("MANAGE ENTERPRISES");

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(888, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblsysadmin, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblsysadmin)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        btnUpdate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tblEnterprises.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblEnterprises.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NETWORK NAME", "ENTERPRISE ", "ENTERPRISE TYPE", "CONTACT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEnterprises.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEnterprisesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEnterprises);

        btnAdd.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        txtEnterpriseName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEnterpriseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnterpriseNameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("ENTERPRISE TYPE");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("NETWORK");

        cmbNetwork1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbNetwork1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select any one" }));
        cmbNetwork1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNetwork1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("ENTERPRISE NAME");

        cmbEntp.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbEntp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select any one", "Lab", "Pharmacy", "Canteen", "Health Club" }));
        cmbEntp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEntpActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("CONTACT");

        txtPhoneNo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        cmbNetwork.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbNetwork.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select any one " }));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setText("SELECT A NETWORK");

        btnView.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(540, 540, 540)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(cmbNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(btnView))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(100, 100, 100)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(8, 8, 8)
                                    .addComponent(cmbNetwork1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(40, 40, 40)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(170, 170, 170)
                                            .addComponent(cmbEntp, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(30, 30, 30)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6)
                                    .addComponent(txtEnterpriseName, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(110, 110, 110)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(100, 100, 100)
                                            .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(20, 20, 20)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(160, 160, 160)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 560, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 124, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnView))
                    .addGap(19, 19, 19)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(70, 70, 70)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(cmbNetwork1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(22, 22, 22)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(cmbEntp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(22, 22, 22)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtEnterpriseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(31, 31, 31)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(32, 32, 32)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 125, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (tblEnterprises.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(this, "Please select 1 row to update");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblEnterprises.getModel();

        String networkName = cmbNetwork1.getSelectedItem().toString();
        String enterpriseType1 = cmbEntp.getSelectedItem().toString();
        String enterpriseName = model.getValueAt(tblEnterprises.getSelectedRow(), 1).toString();

        Network network = systemAdmin.findNetwork(networkName);
        EnterpriseDirectory enterpriseDirec = network.getEnterpriseDirectory();

        Enterprise enterpriseToUpdate = null;
        if (enterpriseType1.equals("Health Club") && enterpriseDirec != null) {

            for (HealthClub list : enterpriseDirec.getListOfHealthClub()) {
                if (list.getName().equals(enterpriseName)) {  //if enterprise name matches
                    enterpriseToUpdate = list;
                }
            }
            JOptionPane.showMessageDialog(this, "Enterprise updated successfully");
            return;
        } else if (enterpriseType1.equals("Lab") && enterpriseDirec != null) {
            for (Lab list : enterpriseDirec.getListOfEvents()) {
                if (list.getName().equals(enterpriseName)) {
                    enterpriseToUpdate = list;
                }
            }
        } else if (enterpriseType1.equals("Hotel") && enterpriseDirec != null) {
            for (Canteen list : enterpriseDirec.getListOfHotel()) {
                if (list.getName().equals(enterpriseName)) {           //if enterprise name matches
                    enterpriseToUpdate = list;
                }
            }
        } else if (enterpriseType1.equals("Lab") && enterpriseDirec != null) {
            for (Pharmacy list : enterpriseDirec.getListOfRestaurants()) {
                if (list.getName().equals(enterpriseName)) {           //if enterprise name matches
                    enterpriseToUpdate = list;
                }
            }
        }

        if (enterpriseToUpdate == null) {
            JOptionPane.showMessageDialog(this, "Unknown enterprise.");
            return;
        }

        enterpriseToUpdate.setName(txtEnterpriseName.getText());
        enterpriseToUpdate.setContact(txtPhoneNo.getText());
        populateTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRowIndex = tblEnterprises.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblEnterprises.getModel();
        String networkName = (String) model.getValueAt(selectedRowIndex, 0);
        String enterpriseType = (String) model.getValueAt(selectedRowIndex, 2);
        String enterpriseName = (String) model.getValueAt(selectedRowIndex, 1);
        Network network = systemAdmin.findNetwork(networkName);
        EnterpriseDirectory enterpriseDirec = network.getEnterpriseDirectory();
        if (enterpriseType.equals("Lab") && enterpriseDirec.getListOfEvents() != null) {
            for (Lab event : enterpriseDirec.getListOfEvents()) {
                if (event.getName().equals(enterpriseName)) {
                    enterpriseDirec.deleteEnterpriseEvent(event);
                    JOptionPane.showMessageDialog(this, "Enterprise deleted successfully");
                    populateTable();
                }
            }
        } else if (enterpriseType.equals("Hotel") && enterpriseDirec.getListOfHotel() != null) {
            for (Canteen canteen : enterpriseDirec.getListOfHotel()) {
                if (canteen.getName().equals(enterpriseName)) {
                    enterpriseDirec.deleteEnterpriseHotel(canteen);
                    JOptionPane.showMessageDialog(this, "Enterprise deleted successfully");
                    populateTable();
                }
            }
        } else if (enterpriseType.equals("Pharmacy") && enterpriseDirec.getListOfRestaurants() != null) {
            for (Pharmacy res : enterpriseDirec.getListOfRestaurants()) {
                if (res.getName().equals(enterpriseName)) {
                    enterpriseDirec.deleteEnterpriseRestaurant(res);
                    JOptionPane.showMessageDialog(this, "Enterprise deleted successfully");
                    populateTable();
                }
            }
        } else if (enterpriseType.equals("Health Club") && enterpriseDirec.getListOfHealthClub() != null) {
            for (HealthClub club : enterpriseDirec.getListOfHealthClub()) {
                if (club.getName().equals(enterpriseName)) {
                    enterpriseDirec.deleteEnterpriseHealthClub(club);
                    JOptionPane.showMessageDialog(this, "Enterprise deleted successfully");
                    populateTable();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "not found");
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblEnterprisesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEnterprisesMouseClicked

        if (tblEnterprises.getSelectedRowCount() != 1) {
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblEnterprises.getModel();

        String networkName = model.getValueAt(tblEnterprises.getSelectedRow(), 0).toString();
        String enterpriseName = model.getValueAt(tblEnterprises.getSelectedRow(), 1).toString();
        String enterpriseType1 = model.getValueAt(tblEnterprises.getSelectedRow(), 2).toString();
        String enterpriseContact = model.getValueAt(tblEnterprises.getSelectedRow(), 3).toString();

        cmbNetwork1.setSelectedItem(networkName);
        cmbEntp.setSelectedItem(enterpriseType1);
        txtEnterpriseName.setText(enterpriseName);
        txtPhoneNo.setText(enterpriseContact);
    }//GEN-LAST:event_tblEnterprisesMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String contact = txtPhoneNo.getText();
        String name = txtEnterpriseName.getText();
        String networkName = cmbNetwork1.getSelectedItem().toString();
        String enterpriseType1 = cmbEntp.getSelectedItem().toString();
        Network network = systemAdmin.findNetwork(networkName);

        if (network == null) {
            JOptionPane.showMessageDialog(this, "Enter a Network.");
            return;
        }

        if (contact == null || contact.length()>10 || contact.length()<10) {
            JOptionPane.showMessageDialog(this, "Invalid Contact Number.");
            return;
        }

        if (name == null || name.length() < 2) {
            JOptionPane.showMessageDialog(this, "Invalid input: Enterprise name should be atleast 2 characters long.");
            return;
        }

        EnterpriseDirectory enterpriseDirec = network.getEnterpriseDirectory();
        if (enterpriseType1.equals("Health Club") && enterpriseDirec != null) {
            enterpriseDirec.addHealthClub(name, contact);
            JOptionPane.showMessageDialog(this, "Enterprise added successfully");
            return;
        } else if (enterpriseType1.equals("Pharmacy") && enterpriseDirec != null) {
            enterpriseDirec.addRestaurant(name, contact);
            JOptionPane.showMessageDialog(this, "Enterprise added successfully");

            return;
        } else if (enterpriseType1.equals("Lab") && enterpriseDirec != null) {
            enterpriseDirec.addBusinessEvent(name, contact);
            JOptionPane.showMessageDialog(this, "Enterprise added successfully");

            return;
        } else if (enterpriseType1.equals("Canteen") && enterpriseDirec != null) {
            enterpriseDirec.addHotel(name, contact);
            JOptionPane.showMessageDialog(this, "Enterprise added successfully");
            return;
        }
        txtEnterpriseName.setText("");
        txtPhoneNo.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtEnterpriseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnterpriseNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnterpriseNameActionPerformed

    private void cmbNetwork1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNetwork1ActionPerformed

    }//GEN-LAST:event_cmbNetwork1ActionPerformed

    private void cmbEntpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEntpActionPerformed

    }//GEN-LAST:event_cmbEntpActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        populateTable();
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        callOnCreateMethod.run();
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cmbEntp;
    private javax.swing.JComboBox<String> cmbNetwork;
    private javax.swing.JComboBox<String> cmbNetwork1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblsysadmin;
    private javax.swing.JTable tblEnterprises;
    private javax.swing.JTextField txtEnterpriseName;
    private javax.swing.JTextField txtPhoneNo;
    // End of variables declaration//GEN-END:variables

 private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblEnterprises.getModel();
        model.setRowCount(0);
        Object row[] = new Object[10];
        String networkItem = cmbNetwork.getSelectedItem().toString();
        Network network = systemAdmin.findNetwork(networkItem);

        List<Lab> eventList = network.getEnterpriseDirectory().getListOfEvents();
        if (eventList != null) {
            for (int i = 0; i < eventList.size(); i++) {
                row[0] = networkItem;
                row[1] = eventList.get(i).getName();
                row[2] = "Lab";
                row[3] = eventList.get(i).getContact();
                model.addRow(row);
            }
        }

        List<Pharmacy> restaurantList = network.getEnterpriseDirectory().getListOfRestaurants();
        if (restaurantList != null) {
            for (int i = 0; i < restaurantList.size(); i++) {
                row[0] = networkItem;
                row[1] = restaurantList.get(i).getName();
                row[2] = "Pharmacy";
                row[3] = restaurantList.get(i).getContact();
                model.addRow(row);
            }
        }

        List<HealthClub> healthclubList = network.getEnterpriseDirectory().getListOfHealthClub();
        if (healthclubList != null) {
            for (int i = 0; i < healthclubList.size(); i++) {
                row[0] = networkItem;
                row[1] = healthclubList.get(i).getName();
                row[2] = "Health Club";
                row[3] = healthclubList.get(i).getContact();
                model.addRow(row);
            }
        }

        List<Canteen> hotelList = network.getEnterpriseDirectory().getListOfHotel();
        if (hotelList != null) {
            for (int i = 0; i < hotelList.size(); i++) {
                row[0] = networkItem;
                row[1] = hotelList.get(i).getName();
                row[2] = "Canteen";
                row[3] = hotelList.get(i).getContact();
                model.addRow(row);
            }
        }

    }
    
}
